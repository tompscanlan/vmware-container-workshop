default:
  cmds:
    - task: start

build:
  desc: docker build a jenkins service image
  cmds:
    - docker build -t {{.name}}:{{.tag}} .
  sources:
    - Dockerfile
    - security.groovy
    - plugins.txt
  status:
    - docker images | grep "^{{.name}}" | grep -q {{.tag}}

#push:
#  desc: tag and push the container to a registry
#  cmds:
#    - docker build -t {{.name}}:{{.tag}} .
#  sources:
#    - Dockerfile
#    - security.groovy
#    - plugins.txt
#  status:
#    - docker images | grep "^{{.name}}" | grep -q {{.tag}}

start:
  desc: Start the container if it already exists
  deps: [run]
  cmds:
    - docker start {{.contianername}}
  status:
    - docker ps -a | grep "{{.contianername}}" | grep -v Exited

run:
  desc: Run the container with the local directory and docker socket bind mounted
  deps: [build]
  cmds:
    - docker run -d --name {{.contianername}} --privileged
          -p {{.serviceport}}:{{.serviceport}} -p 50000:50000
          -v /var/run/docker.sock:/var/run/docker.sock
          -v jenkins_home:/var/jenkins_home
          {{.name}}:{{.tag}}
  status:
    - docker ps -a | grep "{{.contianername}}"

logs:
  desc: View the logs from the container
  cmds:
    - docker logs "{{.contianername}}"

wipe:
  desc: Stop and remove the container
  cmds:
    - docker stop {{.contianername}}
    - docker rm {{.contianername}}
  status:
    - out=`docker ps -a` && echo $out | grep -qv "{{.contianername}}"

test:
  silent: true
  cmds:
    - docker images | grep "^{{.name}}" | grep -q {{.tag}}
    - docker ps -a | grep -q {{.contianername}}